{"version":3,"file":"ngx-document-scanner.js","sources":["ngx-document-scanner/lib/services/limits.service.ts","ngx-document-scanner/lib/components/draggable-point/ngx-draggable-point.component.ts","ngx-document-scanner/lib/components/filter-menu/ngx-filter-menu.component.ts","ngx-document-scanner/lib/components/shape-outline/ngx-shape-outline.component.ts","ngx-document-scanner/lib/components/image-editor/ngx-doc-scanner.component.ts","ngx-document-scanner/lib/ngx-document-scanner.module.ts","ngx-document-scanner/public_api.ts","ngx-document-scanner/ngx-document-scanner.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQa,aAAa,GAA1B,MAAa,aAAa;AAC1B,IA6BE;AACF,QA5BU,oBAAe,GAAe,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC3E;AACM;AAED;AAAa,QAAR,YAAO,GAAG;AACpB,YAAI,GAAG,EAAE,CAAC;AACV,YAAI,MAAM,EAAE,CAAC;AACb,YAAI,KAAK,EAAE,CAAC;AACZ,YAAI,IAAI,EAAE,CAAC;AACX,SAAG,CAAC;AACJ;AACM;AAED;AAAa,QAAR,YAAO,GAA+B,EAAE,CAAC;AACnD;AACoB;AAEb;AAA2B,QAKzB,cAAS,GAAgD,IAAI,eAAe,CAA6B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AAC5I,QAAS,oBAAe,GAAgD,IAAI,eAAe,CAA6B,EAAE,CAAC,CAAC;AAC5H,QAAS,WAAM,GAAgC,IAAI,eAAe,CAAa,IAAI,CAAC,OAAO,CAAC,CAAC;AAC7F,QAAS,mBAAc,GAAqC,IAAI,eAAe,CAAC,EAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAC,CAAC,CAAC;AACvG,KAEG;AACH;AAEA;AACE;AACE,IAAK,iBAAiB,CAAC,UAA2B;AACtD,QAAI,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;AACvC,YAAM,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;AACxC,YAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3C,YAAM,OAAO,EAAE,CAAC;AAChB,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AAEA;AACE;AACE,IAAK,gBAAgB,CAAC,SAAS;AACnC,QAAI,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;AAC7B,QAAI,SAAS,CAAC,OAAO,CAAC,QAAQ;AAC9B,YAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AACpC,SAAK,CAAC,CAAC;AACP,QAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACzC,KAAG;AACH;AAEA;AACE;AACE;AACE,IAAG,cAAc,CAAC,kBAAuC;AAC/D;AACI,QAAA,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;AAC5C;AAEE;AACI;AACI,QAAN,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS;AAC1C,YAAM,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK;AACtD,gBAAQ,OAAO,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC/C,aAAO,CAAC;AACR,iBAAS,GAAG,CAAC,CAAC,KAA0B;AACxC,gBAAU,OAAO,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;AACzD,aAAS,CAAC,CAAC;AACX,YAAM,IAAI,KAAK,CAAC;AAChB,YAAM,IAAI,SAAS,KAAK,KAAK,IAAI,SAAS,KAAK,MAAM,EAAE;AACvD,gBAAQ,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,CAAC;AAC5C,aAAO;AACP,YAAM,IAAI,SAAS,KAAK,OAAO,IAAI,SAAS,KAAK,QAAQ,EAAE;AAC3D,gBAAQ,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,CAAC;AAC5C,aAAO;AACP,YAAM,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;AACtC,SAAK,CAAC,CAAC;AACP,QACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACnC,QAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AAClD,KAAG;AACH;AAEA;AACE;AACE;AACE,IAAG,cAAc,CAAC,cAAmC;AAC3D;AACI,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK;AAC9C,YAAM,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAClE,SAAK,CAAC,CAAC;AACP,QAAI,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AACtB,YAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACxC,SAAK;AAAE,aAAI;AACX,YAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,cAAc,CAAC,CAAC;AACpD,SAAK;AACL,KAAG;AACH;AAEA;AACE;AACE;AACE;AACE,IAAC,YAAY,CAAC,cAAmC;AAAK,QAC1D,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS;AAC7D,YAAM,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACvD,SAAK,CAAC,CAAC;AACP,QACI,MAAM,cAAc,GAAmB;AAC3C,YAAM,OAAO,EAAE,KAAK;AACpB,YAAM,iBAAiB,EAAE;AACzB,gBAAQ,CAAC,EAAE,CAAC;AACZ,gBAAQ,CAAC,EAAE,CAAC;AACZ,aAAO;AACP,YAAM,gBAAgB,EAAE;AACxB,gBAAQ,CAAC,EAAE,cAAc,CAAC,CAAC;AAC3B,gBAAQ,CAAC,EAAE,cAAc,CAAC,CAAC;AAC3B,aAAO;AACP,SAAK,CAAC;AACN;AAEE,QAAE,WAAW,CAAC,OAAO,CAAC,SAAS;AACjC,YAAM,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;AAC7D,YAAM,IAAI,SAAS,KAAK,KAAK,IAAI,SAAS,KAAK,MAAM,EAAE;AACvD,gBAAQ,IAAI,cAAc,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;AACrE,oBAAU,cAAc,CAAC,iBAAiB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAC9D,oBAAU,cAAc,CAAC,gBAAgB,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACnF,iBAAS;AACT,aAAO;AAAE,iBAAI,IAAI,SAAS,KAAK,OAAO,IAAI,SAAS,KAAK,QAAQ,EAAE;AAClE,gBAAQ,IAAI,cAAc,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;AACrE,oBAAU,cAAc,CAAC,iBAAiB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/D,oBAAU,cAAc,CAAC,gBAAgB,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACnF,iBAAS;AACT,aAAO;AACP,SAAK,CAAC,CAAC;AACP,QACI,IAAI,cAAc,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,EAAE;AAC9F,YAAM,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC;AACpC,SAAK;AACL,QACI,OAAO,cAAc,CAAC;AAC1B,KAAG;AACH;AAEA;AACE;AACE;AACE;AAEL;AAAS,IAAD,eAAe,CAAC,YAAY,EAAE,wBAAwB,EAAE,gBAA4C;AAC7G;AACI,QAAA,gBAAgB,GAAG,gBAAgB,CAAC,GAAG,CAAC,KAAK;AACjD,YAAM,OAAO,IAAI,kBAAkB,CAAC;AACpC,gBAAQ,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,wBAAwB,CAAC,KAAK;AACnD,gBAAQ,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,wBAAwB,CAAC,MAAM;AACpD,aAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AACtB,SAAK,CAAC,CAAC;AACP,QAAI,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK;AACpD,YAAM,OAAO,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;AAC/C,SAAK,CAAC,CAAC,CAAC;AACR,KAAG;AACH;AAEA;AACE;AACE,IAAM,qBAAqB,CAAC,MAA2B;AAAK,QAC5D,MAAM,OAAO,GAAwB;AACzC,YAAM,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;AACpD,YAAM,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;AAC/C,YAAM,KAAK,EAAE,EAAE;AACf,SAAK,CAAC;AACN;AACI,QAAA,MAAM,KAAK,GAAsB;AACrC,YAAM,CAAC,QAAQ,EAAE,MAAM,CAAC;AACxB,YAAM,CAAC,KAAK,EAAE,MAAM,CAAC;AACrB,YAAM,CAAC,KAAK,EAAE,OAAO,CAAC;AACtB,YAAM,CAAC,QAAQ,EAAE,OAAO,CAAC;AACzB,YAAM,CAAC,QAAQ,EAAE,MAAM,CAAC;AACxB,SAAK,CAAC;AACN,QAAI,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK;AAC/C,YAAM,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;AACpD,SAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACZ,QAAI,OAAO,OAAO,CAAC;AACnB,KAAG;AACH;AAEA;AACE;AACE;AACE;AAEL;AAAS,IAAD,YAAY,CAAC,MAAqB,EAAE,MAAqB;AAAK,QACnE,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO;AAChC,YAAM,OAAO,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACtC,SAAK,CAAC,IAAI,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,CAAC;AAC1C,KAAG;AACH,IACU,gBAAgB,CAAC,SAAS;AACpC,QAAI,OAAO;AACX,YAAM,IAAI,EAAE,GAAG;AACf,YAAM,KAAK,EAAE,GAAG;AAChB,YAAM,GAAG,EAAE,GAAG;AACd,YAAM,MAAM,EAAE,GAAG;AACjB,SAAK,CAAC,SAAS,CAAC,CAAC;AACjB,KAAG;AACH;8FAAC;AACD;AAnNa,aAAa,qBAHzB,UAAU,CAAC,WACV,5BAEE;AAFQ,EAAE,MAAM,OACnB,CAAC,hBAIM,GAHK,aAAa,CAkNzB;AACA,MAiBY,kBAAkB;AAAI,IAKjC,YAAY,QAAoB,EAAE,KAAiB;AACrD,QAAI,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;AACxB,QAAI,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;AACxB,QAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,KAAG;AACH;AAAE;AACF,IC9Oa,0BAA0B,GAAvC,MAAa,0BAA0B;AAAI,IAiBzC,YAAoB,aAA4B;AAAK,QAAjC,kBAAa,GAAb,aAAa,CAAe;AAAE,QAhBzC,UAAK,GAAG,EAAE,CAAC;AACtB,QAAW,WAAM,GAAG,EAAE,CAAC;AACvB,QAAW,UAAK,GAAG,SAAS,CAAC;AAC7B,QAAW,UAAK,GAAsB,MAAM,CAAC;AAC7C,QAAW,iBAAY,GAAsB,MAAM,CAAC;AACpD,QAIE,aAAQ,GAAe;AACzB,YAAI,CAAC,EAAE,CAAC;AACR,YAAI,CAAC,EAAE,CAAC;AACR,SAAG,CAAC;AACJ,KAGsD;AACtD,IACE,eAAe;AACjB,QAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,GAAG;AAC9C,YAAM,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AACzC,SAAK,CAAC,CAAC;AACP;AACI,QAAA,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS,CAAC,UAAU;AAC1D,YAAM,IAAI,UAAU,CAAC,KAAK,GAAG,CAAC,IAAI,UAAU,CAAC,KAAK,GAAG,CAAC,EAAE;AACxD,gBAAQ,IAAI,CAAC,eAAe,GAAG;AAC/B,oBAAU,KAAK,EAAE,UAAU,CAAC,KAAK;AACjC,oBAAU,MAAM,EAAE,UAAU,CAAC,MAAM;AACnC,iBAAS,CAAC;AACV,gBAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;AAC5D,gBAAQ,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAClG,aAAO;AACP,SAAK,CAAC,CAAC;AACP;AACI,QAAA,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS;AAC1D,YAAM,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AAChC,gBAAQ,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;AAC3C,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AAEA;AACE;AACE,IAAF,UAAU;AACZ,QAAI,OAAO;AACX,YAAM,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI;AAC9B,YAAM,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI;AAChC,YAAM,kBAAkB,EAAE,IAAI,CAAC,KAAK;AACpC,YAAM,eAAe,EAAE,IAAI,CAAC,KAAK,KAAK,QAAQ,GAAG,MAAM,GAAG,CAAC;AAC3D,YAAM,QAAQ,EAAE,UAAU;AAC1B,SAAK,CAAC;AACN,KAAG;AACH;AAEA;AACE;AACE;AACE,IAAJ,cAAc,CAAC,QAAoB;AACrC,QAAI,MAAM,kBAAkB,GAAG,IAAI,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AACjF,QAAI,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;AAC/E,QAAI,IAAI,cAAc,CAAC,OAAO,EAAE;AAChC;AACM,YAAA,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC,gBAAgB,CAAC;AAC3D,SAAK;AAAE,aAAI;AACX,YAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;AAC5D,YAAM,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;AACvC,SAAK;AACL,KAAG;AACH;AAEA;AACE;AACE,IAAM,cAAc,CAAC,cAA8B;AACvD,QAAI,MAAM,WAAW,GAAG;AACxB,YAAM,CAAC,EAAE,CAAC;AACV,YAAM,CAAC,EAAE,CAAC;AACV,SAAK,CAAC;AACN,QAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,IAAI;AAChD,YAAM,WAAW,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;AACzG,SAAK,CAAC,CAAC;AACP,QAAI,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;AAChC,QAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAC9F,KAAG;AACH;AAEA;AACE;AACE,IAAF,WAAW,CAAC,QAAoB;AAClC,QAAI,IAAI,kBAAkB,GAAG,IAAI,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/E,QAAI,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;AAC/E,QAAI,IAAI,cAAc,CAAC,OAAO,EAAE;AAChC,YAAM,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC,gBAAgB,CAAC;AAC3D,YAAM,IAAI,cAAc,CAAC,OAAO,EAAE;AAClC,gBAAQ,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;AAC5C,gBAAQ,kBAAkB,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AACpF,gBAAQ,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;AAC9D,aAAO;AACP,SAAK;AACL,KAAG;AACH;AAEA;AACE;AACE;AACE,IAAI,kBAAkB,CAAC,UAA2B;AACxD,QAAI,OAAO;AACX,YAAM,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC;AACjF,YAAM,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;AAClF,SAAK,CAAC;AACN,KAAG;AACH;AAEA;AACE;AACE;AACE,IAAI,kBAAkB,CAAC,SAAqC;AAClE,QAAI,SAAS,CAAC,OAAO,CAAC,QAAQ;AAC9B,YAAM,IAAI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC5E,gBAAQ,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;AACpD,gBAAQ,IAAI,CAAC,QAAQ,GAAG;AACxB,oBAAU,CAAC,EAAE,QAAQ,CAAC,CAAC;AACvB,oBAAU,CAAC,EAAE,QAAQ,CAAC,CAAC;AACvB,iBAAS,CAAC;AACV,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AAEA;AACE;AACE,IAAM,iBAAiB,CAAC,QAA6B;AAAK,QAC1D,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;AAC/E,YAAM,OAAO,QAAQ,CAAC;AACtB,SAAK;AAAE,aAAI;AACX,YAAM,IAAI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;AAAG,gBAAD,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;AAAE,aAAA;AAC/F,YAAM,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE;AAAG,gBAAD,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AAAE,aAAA;AAC7C,YAAM,IAAI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;AAAG,gBAAD,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;AAAE,aAAA;AACjG,YAAM,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE;AAAG,gBAAD,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AAAE,aAAA;AAC7C,SAAK;AACL,QAAI,OAAO,QAAQ,CAAC;AACpB,KAAG;AACH;;;;;;;;6HAAC;AACD;AACmD,YAhId,aAAa;AAAI;AAhB3C;AACV,IADE,KAAK,EAAE;AAAG;AAEV,yDAFmB;AACX;AACX,IADG,KAAK,EAAE;AAAG;AACc,0DADJ;AACZ;AAAc,IAAtB,KAAK,EAAE;AAAG;AACQ,yDADQ;AAClB;AAAc,IAAtB,KAAK,EAAE;AAAG;AACR,yDADwC;AAClC;AAAc,IAAtB,KAAK,EAAE;AAAG;AAAuC,gEAAA;AACzC;AAAc,IAAtB,KAAK,EAAE;AAAG,8BAAU,KAAK;AAAG,8DAA6B;AACjD;AAAc,IAAtB,KAAK,EAAE;AAAG;AACA,iEADwB;AAC1B;AAAc,IAAtB,KAAK,EAAE;AAAG,8BAAS,WAAW;AACjC,6DADkC;AACvB;AAAc,IAAtB,KAAK,EAAE;AAAG;AACX,oEAD8C;AATnC,0BAA0B,qBAJtC,SAAS,CAAC,WACT,QAAQ,EAAE,rCAGR,kCAiBiC,aAAa;OApBjB,WAC/B,lBAmBoD,GAjBzC,0BAA0B,CA+ItC;AACD;AAAC,ICjJY,sBAAsB,GAAnC,MAAa,sBAAsB;AACnC,IAgDE,YAAoB,cAAyD,EAC3B,IAAS;AAC1D,QAFmB,mBAAc,GAAd,cAAc,CAA2C;AAAE,QAC7B,SAAI,GAAJ,IAAI,CAAK;AAC7D,QAlDE,kBAAa,GAA8B;AAC7C,YAAI;AACJ,gBAAM,IAAI,EAAE,SAAS;AACrB,gBAAM,IAAI,EAAE,gBAAgB;IDLyB,OACpD,CAAC,ZCKF,gBAAM,MAAM,EAAE,CAAC,MAAM;AACrB,oBAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,iBAAO;AACP,gBAAM,IAAI,EAAE,KAAK;AACjB,aAAK;AACL,YAAI;AACJ,gBAAM,IAAI,EAAE,KAAK;AACjB,gBAAM,IAAI,EAAE,gBAAgB;AAC5B,gBAAM,MAAM,EAAE,CAAC,MAAM;AACrB,oBAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,iBAAO;AACP,gBAAM,IAAI,EAAE,OAAO;AACnB,aAAK;AACL,YAAI;AACJ,gBAAM,IAAI,EAAE,KAAK;AACjB,gBAAM,IAAI,EAAE,SAAS;AACrB,gBAAM,MAAM,EAAE,CAAC,MAAM;AACrB,oBAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,iBAAO;AACP,gBAAM,IAAI,EAAE,OAAO;AACnB,aAAK;AACL,YAAI;AACJ,gBAAM,IAAI,EAAE,aAAa;AACzB,gBAAM,IAAI,EAAE,gBAAgB;AAC5B,gBAAM,MAAM,EAAE,CAAC,MAAM;AACrB,oBAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,iBAAO;AACP,gBAAM,IAAI,EAAE,aAAa;AACzB,aAAK;AACL,YAAI;AACJ,gBAAM,IAAI,EAAE,UAAU;AACtB,gBAAM,IAAI,EAAE,eAAe;AAC3B,gBAAM,MAAM,EAAE,CAAC,MAAM;AACrB,oBAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,iBAAO;AACP,gBAAM,IAAI,EAAE,UAAU;AACtB,aAAK;AACL,SAAG,CAAC;AACJ,QAAY,mBAAc,GAAyB,IAAI,YAAY,EAAE,CAAC;AACtE,KAOkB;AAClB,IARE,YAAY,CAAC,UAAU;AACzB,QAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;AAClC,QAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;AAClC,KAAG;AACH;;;;;;;;;2JAKC;AACD;AAAiD,YALX,iBAAiB;AAAK,4CAC7C,MAAM,SAAC,qBAAqB;AAAS;AAPxC;AAAc,IAAvB,MAAM,EAAE;AAAG,8BAAc,YAAY;AAAG,8DAA2B;AA3CzD,sBAAsB,qBAJlC,SAAS,CAAC,WACT,QAAQ,EAAE,rCAGR,CAkDW,WAAA,MAAM,CAAC,qBAAqB,CAAC,CAAA;SArDf,WAC3B,pBAoD6C,qCADT,iBAAiB;AAAY,GAjDtD,sBAAsB,CAqDlC;AACD;AAAC,ICtDY,wBAAwB,GAArC,MAAa,wBAAwB;AAAI,IASvC,YAAoB,aAA4B;AAAK,QAAjC,kBAAa,GAAb,aAAa,CAAe;AAAE,QAPzC,UAAK,GAAG,SAAS,CAAC;AAC7B,KAMsD;AACtD,IACE,eAAe;AACjB;AACI,QAAA,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;yBDfX,OAChD,CAAC,jCCeF,QAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;AAC9D,QAAI,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS;AACpD,YAAM,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAClC,gBAAQ,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;AACjC,gBAAQ,IAAI,CAAC,UAAU,EAAE,CAAC;AAC1B,gBAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;AAC3B,gBAAQ,IAAI,CAAC,SAAS,EAAE,CAAC;AACzB,aAAO;AACP,SAAK,CAAC,CAAC;AACP;AACI,QAAA,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS,CAAC,UAAU;AAC1D,YAAM,IAAI,CAAC,WAAW,EAAE,CAAC;AACzB,YAAM,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;AACzD,YAAM,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;AAC3D,SAAK,CAAC,CAAC;AACP;AACI,QAAA,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,CAAE,SAAS;AAC3D,YAAM,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAClC,gBAAQ,UAAU,CAAE;AACpB,oBAAU,IAAI,CAAC,WAAW,EAAE,CAAC;AAC7B,oBAAU,IAAI,CAAC,UAAU,EAAE,CAAC;AAC5B,oBAAU,IAAI,CAAC,SAAS,EAAE,CAAC;AAC3B,iBAAS,EAAE,EAAE,CAAC,CAAC;AACf,aAAO;AACP,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AAEA;AACE;AACE,IAAM,WAAW;AACrB,QAAI,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;AAC7C,QAAI,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACxC,QAAI,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACvE,KAAG;AACH;AAEA;AACE;AACE,IAAM,UAAU;AACpB,QAAI,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC7C,QAAI,MAAM,YAAY,GAAG,EAAE,CAAC;AAC5B,QACI,MAAM,SAAS,GAAG;AACtB,YAAM,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAClD,YAAM,UAAU,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;AACpD,SAAK,CAAC;AACN,QACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAChC,YAAM,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjF,YAAM,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK;AAC7C,gBAAQ,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACnE,aAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,SACK;AACL,QAAI,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;AACtC,KAAG;AACH;AAEA;AACE;AACE,IAAM,SAAS;AACnB,QAAI,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;AAC7C,QAAI,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACxC,QAAI,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;AAChC,QAAI,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;AACjC,QAAI,GAAG,CAAC,SAAS,EAAE,CAAC;AACpB,QAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK;AAC5C,YAAM,IAAI,KAAK,KAAK,CAAC,EAAE;AACvB,gBAAQ,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AACrC,aAAO;AACP,YAAM,IAAI,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;AACnD,gBAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACxD,gBAAQ,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;AAC7C,aAAO;AAAE,iBAAI;AACb,gBAAQ,GAAG,CAAC,SAAS,EAAE,CAAC;AACxB,aAAO;AACP,SAAK,CAAC,CAAC;AACP,QAAI,GAAG,CAAC,MAAM,EAAE,CAAC;AACjB,KAAG;AACH;;;;;;;;;;;wGAAC;AACD;AAE+C,YAxFV,aAAa;AAAI;AAP3C;AAAc,IAAtB,KAAK,EAAE;AAAG;AACQ,uDADQ;AAClB;AAAc,IAAtB,KAAK,EAAE;AAAG;AACW,wDADE;AACf;AAAc,IAAtB,KAAK,EAAE;AAAG;AACF,4DAD4B;AACf;AAErB,IAFA,SAAS,CAAC,SAAS,CAAC;AAAG;AAEI,wDAFC;AALlB,wBAAwB,qBAJpC,SAAS,CAAC,WACT,QAAQ,EAAE,rCAGR,kCASiC,aAAa;IAZpB,WAC5B,fAWoD,GATzC,wBAAwB,CA8FpC;AACD;AAAC,ICtFY,sBAAsB,GAAnC,MAAa,sBAAsB;AAAI,IAyMrC,YAAoB,SAA2B,EAAU,aAA4B,EAAU,WAA2B;AAC5H,QADsB,cAAS,GAAT,SAAS,CAAkB;AAAE,QAAQ,kBAAa,GAAb,aAAa,CAAe;QDpNpC,OAClD,CAAC,hBCmNuF,QAAQ,gBAAW,GAAX,WAAW,CAAgB;AAAE;AACpG;AACF;AACJ;AAAa;AAIf;AAAa,QArMrB,kBAAa,GAA8B;AACrD,YAAI;AACJ,gBAAM,IAAI,EAAE,MAAM;AAClB,gBAAM,MAAM,EAAE;AACd,oBAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACzC,iBAAO;AACP,gBAAM,IAAI,EAAE,YAAY;AACxB,gBAAM,IAAI,EAAE,KAAK;AACjB,gBAAM,IAAI,EAAE,MAAM;AAClB,aAAK;AACL,YAAI;AACJ,gBAAM,IAAI,EAAE,QAAQ;AACpB,gBAAM,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;AACzC,gBAAM,IAAI,EAAE,cAAc;AAC1B,gBAAM,IAAI,EAAE,KAAK;AACjB,gBAAM,IAAI,EAAE,MAAM;AAClB,aAAK;AACL,YAAI;AACJ,gBAAM,IAAI,EAAE,WAAW;AACvB,gBAAM,MAAM,EAAE;AAEL,oBADD,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;AAC5B,oBAAQ,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;AAC/B,oBAAQ,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACrC,iBAAO,CAAA;AACP,gBAAM,IAAI,EAAE,MAAM;AAClB,gBAAM,IAAI,EAAE,KAAK;AACjB,gBAAM,IAAI,EAAE,MAAM;AAClB,aAAK;AACL,YAAI;AACJ,gBAAM,IAAI,EAAE,MAAM;AAClB,gBAAM,MAAM,EAAE;AACd,oBAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;AAC3B,oBAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC1C,iBAAO;AACP,gBAAM,IAAI,EAAE,YAAY;AACxB,gBAAM,IAAI,EAAE,KAAK;AACjB,gBAAM,IAAI,EAAE,OAAO;AACnB,aAAK;AACL,YAAI;AACJ,gBAAM,IAAI,EAAE,QAAQ;AACpB,gBAAM,MAAM,EAAE;AACd,oBAAQ,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;AACpC,iBAAO;AACP,gBAAM,IAAI,EAAE,cAAc;AAC1B,gBAAM,IAAI,EAAE,KAAK;AACjB,gBAAM,IAAI,EAAE,OAAO;AACnB,aAAK;AACL,YAAI;AACJ,gBAAM,IAAI,EAAE,QAAQ;AACpB,gBAAM,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;AACzC,gBAAM,IAAI,EAAE,cAAc;AAC1B,gBAAM,IAAI,EAAE,KAAK;AACjB,gBAAM,IAAI,EAAE,OAAO;AACnB,aAAK;AACL,SAAG,CAAC;AACJ;AACM;AAEF;AAAa,QA4Bf,gBAAW,GAAG,KAAK,CAAC;AACtB;AACM;AAED;AAAa,QAAhB,SAAI,GAAmB,MAAM,CAAC;AAChC;AACM;AAED;AAAa,QAAR,mBAAc,GAAG,SAAS,CAAC;AACrC;AACW;AACA;AAAa,QASd,oBAAe,GAAoB;AAC7C,YAAI,KAAK,EAAE,CAAC;AACZ,YAAI,MAAM,EAAE,CAAC;AACb,SAAG,CAAC;AACJ;AACuB;AAEd;AACT;AACM;AAEO;AAAa,QAwBd,eAAU,GAAyB,IAAI,YAAY,EAAU,CAAC;AAC1E;AACM;AAED;AAAa,QAAN,eAAU,GAAuB,IAAI,YAAY,EAAQ,CAAC;AACtE;AACM;AAED;AAAa,QAAN,UAAK,GAAsB,IAAI,YAAY,EAAO,CAAC;AAC/D;AACM;AAED;AAAa,QAAN,UAAK,GAA0B,IAAI,YAAY,EAAW,CAAC;AACvE;AACM;AAED;AAAa,QAAN,eAAU,GAA0B,IAAI,YAAY,EAAW,CAAC;AAC5E,QAiCI,IAAI,CAAC,gBAAgB,GAAG;AAC5B,YAAM,KAAK,EAAE,MAAM,CAAC,UAAU;AAC9B,YAAM,MAAM,EAAE,MAAM,CAAC,WAAW;AAChC,SAAK,CAAC;AACN;AAEE,QAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,OAAoB;AAC1D,YAAM,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;AACnC,YAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACrC,YAAM,IAAI,OAAO,CAAC,KAAK,EAAE;AACzB,gBAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;AACvD,aAAO;AAAE,iBAAI,IAAI,OAAO,CAAC,OAAO,EAAE;AAClC,gBAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnC,aAAO;AAAE,iBAAI,IAAI,OAAO,CAAC,KAAK,EAAE;AAChC,gBAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpC,aAAO;AACP,SAAK,CAAC,CAAC;AACP;AAEE,QAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM;AACjD,YAAM,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC3B,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AACO;AAEU;AAAS,IA/JxB,IAAI,gBAAgB;AACtB,QAAI,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM;AAC3C,YAAM,OAAO,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;AACvC,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AACW;AAAkB;AAEzB;AAAS;AAEb;AACG;AACE,IAgGM,IAAI,IAAI,CAAC,IAAU;AAC9B,QAAI,IAAI,IAAI,EAAE;AACd,YAAM,UAAU,CAAC;AACjB,gBAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnC,aAAO,EAAE,CAAC,CAAC,CAAC;AACZ,YAAM,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC/B,YAAM,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAChC,YAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAC9B,CAAO,OAAoB;AAEtB,gBADH,IAAI,OAAO,CAAC,KAAK,EAAE;AAC7B;AACQ,oBAAI,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACtC,oBAAY,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxC,iBAAW;AACX,aAAS,CAAA,CAAC,CAAC;AACX,SAAK;AACL,KAAG;AACH,IAgCE,QAAQ;AACV;AACI,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACtD;AACI,QAAA,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM;AACrC,YAAM,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AACpC,gBAAQ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;AACnD,aAAO;AACP,SAAK,CAAC,CAAC;AACP,QAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;AACxD,QAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;AAChD,KAAG;AACH;AAEA;AACE;AAEA;AACE;AACE;AACE,IAAN,IAAI;AACN,QAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACrC,KAAG;AACH;AAEA;AACE;AACE,IAAY,WAAW;AAC3B;AAC2B,YADvB,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAClC,YAAI,IAAI,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE;AACzC,gBAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;AACnC,qBAAS,IAAI,CAAC,YAAY;AAC1B,oBAAU,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI;AACnC,wBAAY,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvC,wBAAY,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxC,qBAAW,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACtC,iBAAS,CAAC,CAAC;AACX,aAAK;AAAE,iBAAI;AACX,gBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI;AACnC,oBAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnC,oBAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpC,iBAAO,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAClC,aAAK;AACL,SAAG;AAEH,KAFG;AACH;AAEA;AACE;AACE,IAAM,aAAa;AACvB,QAAI,MAAM,IAAI,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC;AACjD,QAAI,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,EAAE;AACzE,YAAM,IAAI,EAAE,IAAI;AAChB,SAAK,CAAC,CAAC;AACP,QAAI,cAAc,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC;AAC9C,YAAM,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC;AACxC,YAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAC7B,SAAK,CAAC,CAAC;AACP,KACG;AACH;AAEA;AACE;AACE;AACE;AAEL;AAAS,IAAA,QAAQ,CAAC,IAAU;AAC7B,QAAI,OAAO,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM;AAEnC,YADJ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC,YAAM,IAAI;AACV,gBAAQ,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACnC,aAAO;AAAE,YAAD,OAAO,GAAG,EAAE;AACpB,gBAAQ,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3B,gBAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACxC,aAAO;AACP,YAAM,IAAI;AACV,gBAAQ,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;AACjC,aAAO;AAAE,YAAD,OAAO,GAAG,EAAE;AACpB,gBAAQ,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3B,gBAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACxC,aAAO;AACP;AACM;AACM,YAAN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAC9B,YAAM,MAAM,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAC,CAAC,CAAC;AAC/H,YAAM,UAAU,CAAC;AAEhB,gBADO,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;AACpC,gBAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpC,gBAAQ,OAAO,EAAE,CAAC;AAClB,aAAO,CAAA,EAAE,EAAE,CAAC,CAAC;AACb,SAAK,CAAA,CAAC,CAAC;AACP,KAAG;AACH;AAEA;AACE;AACE,IAAM,SAAS,CAAC,IAAU;AAC9B,QAAI,OAAO,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM;AAGlC,YAFL,IAAI,QAAQ,CAAC;AACnB,YAAM,IAAI;AACV,gBAAQ,QAAQ,GAAG,MAAM,QAAQ,EAAE,CAAC;AACpC,aAAO;AAAE,YAAD,OAAO,GAAG,EAAE;AACpB,gBAAQ,MAAM,CAAC,GAAG,CAAC,CAAC;AACpB,aAAO;AACP,YAAM,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;AAC9B,YAAM,GAAG,CAAC,MAAM,GAAG;AACoB;AACQ,gBAAvC,IAAI,CAAC,WAAW,GAAuB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAChF,gBAAQ,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;AAC3C,gBAAQ,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AAC7C,gBAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACtD,gBAAQ,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACjC;AACQ,gBAAA,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC;AACtE,gBAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,EAAE;AAC3D,oBAAU,IAAI,CAAC,WAAW,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACjE,iBAAS;AACT,gBAAQ,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC5D,gBAAQ,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;AAC9D,gBAAQ,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACxD,gBAAQ,OAAO,EAAE,CAAC;AAClB,aAAO,CAAA,CAAC;AACR,YAAM,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC;AACzB,SAAK,CAAA,CAAC,CAAC;AACP;AAEE;AACI;AACI,QAAN,SAAS,QAAQ;AACrB,YAAM,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;AACzC,gBAAQ,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;AACxC,gBAAQ,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK;AAC9B,oBAAU,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACjC,iBAAS,CAAC;AACV,gBAAQ,MAAM,CAAC,OAAO,GAAG,CAAC,GAAG;AAC7B,oBAAU,MAAM,CAAC,GAAG,CAAC,CAAC;AACtB,iBAAS,CAAC;AACV,gBAAQ,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACnC,aAAO,CAAC,CAAC;AACT,SAAK;AACL,KAAG;AACH;AAEA;AACE;AACE;AACE;AAEL;AAAS,IAAA,WAAW;AACrB,QAAI,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;AACvC,YAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC,YAAM,UAAU,CAAC;AACjB,gBAAQ,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAChD;AACQ,gBAAA,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC/B,gBAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC7B,gBAAQ,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;AACzC;AACQ,gBAAA,GAAG,CAAC,MAAM,EAAE,CAAC;AACrB;AACQ,gBAAA,MAAM,wBAAwB,GAAG,EAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAC,CAAC;AAC/D,gBAAQ,MAAM,CAAC,MAAM,CAAC,wBAAwB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACxE,gBAAQ,MAAM,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzD;AACQ;AACQ,gBAAR,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACxD;AACQ,gBAAA,MAAM,mBAAmB,GAAG;AACpC,oBAAU,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,wBAAwB,CAAC,KAAK;AAC9E,oBAAU,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,wBAAwB,CAAC,MAAM;AACjF,iBAAS,CAAC;AACV;AAEM,gBAAE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,mBAAmB,EAAE,wBAAwB,EAAE,gBAAgB,CAAC,CAAC;AAC5G,gBAAQ,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC;AAChC,oBAAU,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,oBAAU,OAAO,EAAE,CAAC;AACpB,iBAAS,CAAC,CAAC;AACX,aAAO,EAAE,EAAE,CAAC,CAAC;AACb,SAAK,CAAC,CAAC;AACP,KAEG;AACH;AAEA;AACE;AACE,IAAM,cAAc;AAAM,QAC1B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;AACvC,YAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC,YAAM,UAAU,CAAC;AACjB;AACQ,gBAAA,MAAM,qBAAqB,GAAG,GAAG,CAAC;AAC1C,gBAAQ,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAChD,gBAAQ,MAAM,KAAK,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,qBAAqB,EAAE,GAAG,CAAC,IAAI,GAAG,qBAAqB,CAAC,CAAC;AACtG,gBAAQ,MAAM,KAAK,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxC;AACQ,gBAAA,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;AACrD,gBAAQ,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,cAAc,CAAC,CAAC;AAClE,gBAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AACpC;AACQ,gBAAA,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;AAC3D,gBAAQ,MAAM,QAAQ,GAAG,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;AAC5C,gBAAQ,MAAM,SAAS,GAAG,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC;AACvC,gBAAQ,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,mBAAmB,CAAC,CAAC;AACzF,gBAAQ,MAAM,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AAC1C,gBAAQ,GAAG,CAAC,MAAM,EAAE,CAAC;AAAE,gBAAD,SAAS,CAAC,MAAM,EAAE,CAAC;AAAE,gBAAD,QAAQ,CAAC,MAAM,EAAE,CAAC;AAC5D;AACQ,gBAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG;AACrC,oBAAU,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAI,IAAI,CAAC,gBAAgB,CAAC;AACzD,iBAAS,CAAC,CAAC;AACX,gBACQ,MAAM,kBAAkB,GAAG;AACnC,oBAAU,IAAI,kBAAkB,CAAC,EAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAC,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACzE,oBAAU,IAAI,kBAAkB,CAAC,EAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AACvF,oBAAU,IAAI,kBAAkB,CAAC,EAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AACxG,oBAAU,IAAI,kBAAkB,CAAC,EAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC1F,iBAAS,CAAC;AACV,gBACQ,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;AAChE;AACQ,gBAAA,OAAO,EAAE,CAAC;AAClB,aAAO,EAAE,EAAE,CAAC,CAAC;AACb,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AAEA;AACE;AACE,IAAM,SAAS;AAAM,QACrB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;AACvC,YAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC,YAAM,UAAU,CAAC;AACjB,gBAAQ,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAChD;AAEM,gBAAE,MAAM,iBAAiB,GAAG;AAClC,oBAAU,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACxC,oBAAU,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACzC,oBAAU,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AAC5C,oBAAU,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AAC3C,iBAAS,CAAC,GAAG,CAAC,KAAK;AACnB,oBAAU,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACpF,iBAAS,CAAC,CAAC;AACX;AAEM,gBAAE,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACvG,gBAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9F,gBAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;AACjF;AACQ,gBAAA,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAClG,gBAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACrG,gBAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;AACpF;AACQ,gBAAA,MAAM,eAAe,GAAG;AAChC,oBAAU,CAAC,CAAC,EAAE,CAAC,CAAC;AAChB,oBAAU,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;AAC3B,oBAAU,CAAC,QAAQ,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC;AACvC,oBAAU,CAAC,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC;AAC5B,iBAAS,CAAC;AACV;AAEM,gBAAE,MAAM,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC;AACvF,gBAAQ,MAAM,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC;AACrF,gBAAQ,MAAM,eAAe,GAAG,EAAE,CAAC,uBAAuB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACnE;AACQ,gBAAA,MAAM,KAAK,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AACvD;AACQ,gBAAA,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,eAAe,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;AACnH,gBAAQ,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;AACzC,gBACQ,GAAG,CAAC,MAAM,EAAE,CAAC;AAAE,gBAAD,EAAE,CAAC,MAAM,EAAE,CAAC;AAAE,gBAAD,EAAE,CAAC,MAAM,EAAE,CAAC;AAAE,gBAAD,eAAe,CAAC,MAAM,EAAE,CAAC;AACzE,gBACQ,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACxD,gBAAQ,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC;AAChC,oBAAU,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,oBAAU,OAAO,EAAE,CAAC;AACpB,iBAAS,CAAC,CAAC;AACX,aAAO,EAAE,EAAE,CAAC,CAAC;AACb,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AAEA;AACE;AACE;AACE;AACE,IAAE,WAAW,CAAC,OAAgB;AAAK,QACvC,OAAO,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM;AAEnC,YADJ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC;AACM,YAAA,MAAM,OAAO,GAAG;AACtB,gBAAQ,IAAI,EAAE,KAAK;AACnB,gBAAQ,EAAE,EAAE,IAAI;AAChB,gBAAQ,MAAM,EAAE,EAAE,CAAC,sBAAsB;AACzC,gBAAQ,gBAAgB,EAAE,EAAE;AAC5B,gBAAQ,WAAW,EAAE,EAAE;AACvB,gBAAQ,KAAK,EAAE,GAAG;AAClB,gBAAQ,SAAS,EAAE,IAAI;AACvB,aAAO,CAAC;AACR,YAAM,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC9C,YACM,QAAQ,IAAI,CAAC,cAAc;AACjC,gBAAQ,KAAK,UAAU;AACvB,oBAAU,OAAO,CAAC,EAAE,GAAG,KAAK,CAAC;AAC7B,oBAAU,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;AACpC,oBAAU,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;AAC/B,oBAAU,MAAM;AAChB,gBAAQ,KAAK,aAAa;AAC1B,oBAAU,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;AACpC,oBAAU,MAAM;AAChB,gBAAQ,KAAK,KAAK;AAClB,oBAAU,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC,0BAA0B,CAAC;AACzD,oBAAU,OAAO,CAAC,gBAAgB,GAAG,EAAE,CAAC;AACxC,oBAAU,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC;AACnC,oBAAU,MAAM;AAChB,gBAAQ,KAAK,KAAK;AAClB,oBAAU,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AAC9B,oBAAU,OAAO,CAAC,gBAAgB,GAAG,EAAE,CAAC;AACxC,oBAAU,MAAM;AAChB,aAAO;AACP,YACM,UAAU,CAAC;AAEZ,gBADG,IAAI,OAAO,CAAC,SAAS,EAAE;AAC/B,oBAAU,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;AACvD,iBAAS;AACT,gBAAQ,IAAI,OAAO,CAAC,IAAI,EAAE;AAC1B,oBAAU,MAAM,KAAK,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,oBAAU,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,cAAc,CAAC,CAAC;AACpE,iBAAS;AACT,gBAAQ,IAAI,OAAO,CAAC,EAAE,EAAE;AACxB,oBAAU,IAAI,OAAO,CAAC,SAAS,EAAE;AACjC,wBAAY,EAAE,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,EAAE,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC3I,qBAAW;AAAE,yBAAI;AACjB,wBAAY,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AAC1C,wBAAY,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;AAC/D,qBAAW;AACX,iBAAS;AACT,gBAAQ,IAAI,CAAC,OAAO,EAAE;AACtB,oBAAU,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;AAC3C,iBAAS;AACT,gBAAQ,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACpC,gBAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpC,gBAAQ,OAAO,EAAE,CAAC;AAClB,aAAO,CAAA,EAAE,EAAE,CAAC,CAAC;AACb,SAAK,CAAA,CAAC,CAAC;AACP,KAAG;AACH;AAEA;AACE;AACE,IAAM,MAAM,CAAC,KAAwB;AAAK,QAC1C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;AACvC,YAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC,YAAM,UAAU,CAAC;AACjB,gBAAQ,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACrC,gBAAQ,MAAM,iBAAiB,GAAG;AAClC,oBAAU,KAAK,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK;AACjC,oBAAU,MAAM,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM;AACnC,iBAAS,CAAC;AACV,gBAAQ,MAAM,gBAAgB,GAAG;AACjC,oBAAU,KAAK,EAAE,CAAC;AAClB,oBAAU,MAAM,EAAE,CAAC;AACnB,iBAAS,CAAC;AACV,gBAAQ,IAAI,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,EAAE;AAC7E,oBAAU,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC;AACzE,oBAAU,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,GAAG,iBAAiB,CAAC,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC;AAC/H,oBAAU,IAAI,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,MAAM,EAAE;AAChF,wBAAY,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,MAAM,CAAC;AAC7E,wBAAY,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,MAAM,GAAG,iBAAiB,CAAC,MAAM,GAAG,iBAAiB,CAAC,KAAK,CAAC;AACjI,qBAAW;AACX,oBAAU,MAAM,KAAK,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7G,oBAAU,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC;AAC1D,oBAAU,MAAM,YAAY,GAAuB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACpF,oBAAU,EAAE,CAAC,MAAM,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;AACvC,oBAAU,GAAG,CAAC,MAAM,EAAE,CAAC;AACvB,oBAAU,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,oBAAU,OAAO,CAAC,YAAY,CAAC,CAAC;AAChC,iBAAS;AAAE,qBAAI;AACf,oBAAU,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,oBAAU,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,iBAAS;AACT,aAAO,EAAE,EAAE,CAAC,CAAC;AACb,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AAEA;AACE;AACE,IAAM,WAAW,CAAC,KAAW;AACjC,QAAI,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;AACvC,YAAM,IAAI,GAAG,CAAC;AACd,YAAM,IAAI,KAAK,EAAE;AACjB,gBAAQ,GAAG,GAAG,KAAK,CAAC;AACpB,aAAO;AAAE,iBAAI;AACb,gBAAQ,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC1C,aAAO;AACP,YAAM,MAAM,GAAG,GAAG,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC;AAC/B,YAAM,MAAM,KAAK,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,YAAM,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC;AAC9F,YAAM,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;AACvD,YAAM,GAAG,CAAC,MAAM,EAAE,CAAC;AACnB,YAAM,GAAG,CAAC,MAAM,EAAE,CAAC;AACnB,YAAM,OAAO,EAAE,CAAC;AAChB,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AAEA;AACE;AACE;AACE;AAEL;AAAS,IAAA,wBAAwB,CAAC,GAAsB;AACzD;AACI,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;AAC7E,QAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;AAC1E,QAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;AAC5E,QAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;AACrE,QAAI,IAAI,CAAC,aAAa,GAAG;AACzB,YAAM,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,GAAG,IAAI;AACxF,YAAM,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,MAAM,GAAG,IAAI;AAC3F,YAAM,aAAa,EAAE,gBAAgB,IAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,EAAE,aAAa,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,GAAG,CAAC,KAAK;AACjI,YAAM,cAAc,EAAE,gBAAgB,IAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,EAAE,aAAa,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,GAAG,CAAC,KAAK;AAClI,SAAK,CAAC;AACN,QAAI,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAC,CAAC,CAAC;AACvH,KAAG;AACH;AAEA;AACE;AACE,IAAM,mBAAmB,CAAC,KAAa,EAAE,MAAc;AAAK,QAC5D,MAAM,KAAK,GAAG,KAAK,GAAG,MAAM,CAAC;AACjC,QACI,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe;AACvE,YAAM,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,EAAE,CAAC;AAC9D,QAAI,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,GAAG,CAAC;AACzD,QAAI,MAAM,UAAU,GAAG;AACvB,YAAM,KAAK,EAAE,QAAQ;AACrB,YAAM,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC1C,YAAM,KAAK,EAAE,KAAK;AAClB,SAAK,CAAC;AACN,QACI,IAAI,UAAU,CAAC,MAAM,GAAG,SAAS,EAAE;AACvC,YAAM,UAAU,CAAC,MAAM,GAAG,SAAS,CAAC;AACpC,YAAM,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;AACvD,SAAK;AACL,QAAI,OAAO,UAAU,CAAC;AACtB,KAAG;AACH;AAEA;AACE;AACE;AACE,IAAI,QAAQ,CAAC,KAAiB;AACpC,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK;AACjC,YAAM,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACjE,SAAK,CAAC,CAAC;AACP,KAAG;AACH;;;;;;;;;;;;;;;;;;;;;;;;;+aAAC;AACD;AAE0C,YAveT,gBAAgB;AAAK,YAAoB,aAAa;AAAK,YAAkB,cAAc;AAAI;AA7D9D;AAAc,IAA7E,SAAS,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;AAAG,8BAAqB,UAAU;AACnG,6DADoG;AAYxF;AAAc,IAAvB,MAAM,EAAE;AAAG,8BAAU,YAAY;AAAG,0DAAmC;AAI9D;AAAc,IAAvB,MAAM,EAAE;AAAG,8BAAU,YAAY;AAAG,0DAA+B;AAI1D;AAAc,IAAvB,MAAM,EAAE;AAAG,8BAAK,YAAY;AAAG,qDAA6B;AAInD;AAAc,IAAvB,MAAM,EAAE;AAAG,8BAAK,YAAY;AAAG,qDAAqC;AAI3D;AAAc,IAAvB,MAAM,EAAE;AAAG,8BAAU,YAAY;AAAG,0DAAqC;AASjE;AAAc,IAAtB,KAAK,EAAE;AAAG,8BAAa,IAAI;AAAI,qCAAR,IAAI;AAAI,kDAgB/B;AAKQ;AAAc,IAAtB,KAAK,EAAE;AAAG;AAGH,sDAH0B;AAtMvB,sBAAsB,qBALlC,SAAS,CAAC,WACT,QAAQ,EAAE,iBAAiB,WAC3B,jEAGE,kCAyM6B,gBAAgB,EAAyB,aAAa,EAAuB,cAAc;AAAI,GAzMnH,sBAAsB,CA6qBlC;AAED;AACA;AACA;AACA,MAAM,iBAAiB;AAAI,IAoEzB,YAAY,OAAyB;AACvC;AAAa;AAEL;AAAa,QAnEnB,uBAAkB,GAAoB;AACxC,YAAI,KAAK,EAAE,GAAG;AACd,YAAI,MAAM,EAAE,IAAI;AAChB,SAAG,CAAC;AACJ;AACM;AAED;AAAa,QAAhB,0BAAqB,GAAG,SAAS,CAAC;AACpC;AACM;AAED;AAAa,QAAhB,qBAAgB,GAAuC;AACzD,YAAI,KAAK,EAAE,OAAO;AAClB,YAAI,MAAM,EAAE,OAAO;AACnB,SAAG,CAAC;AACJ;AACM;AAED;AAAa,QAAhB,aAAQ,GAAmC;AAC7C,YAAI,QAAQ,EAAE,UAAU;AACxB,YAAI,GAAG,EAAE,CAAC;AACV,YAAI,IAAI,EAAE,CAAC;AACX,SAAG,CAAC;AACJ;AAEI;AAED;AAAa,QAAd,qBAAgB,GAA8B,QAAQ,CAAC;AACzD;AACM;AAED;AAAa,QAAhB,oBAAe,GAAG,cAAc,CAAC;AACnC;AACM;AAED;AAAa,QAAhB,kBAAa,GAAG,SAAS,CAAC;AAC5B;AACM;AAED;AAAa,QAAhB,kBAAa,GAAe,MAAM,CAAC;AACrC;AACM;AAED;AAAa,QAAhB,uBAAkB,GAAoB;AACxC,YAAI,KAAK,EAAE,EAAE;AACb,YAAI,MAAM,EAAE,EAAE;AACd,SAAG,CAAC;AACJ;AACM;AAAoC;AAAa,QAUrD,uBAAkB,GAAG,CAAC,CAAC;AACzB;AACM;AAED;AAAa,QAAhB,oBAAe,GAAG,GAAG,CAAC;AACxB,QAEI,IAAI,OAAO,EAAE;AACjB,YAAM,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG;AACtC,gBAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AACjC,aAAO,CAAC,CAAC;AACT,SAAK;AACL,QACI,IAAI,CAAC,WAAW,GAAG,EAAC,kBAAkB,EAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC;AACzE,QAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAC3D,QAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACnD,QACI,IAAI,CAAC,YAAY,GAAG;AACxB,YAAM,KAAK,EAAE,IAAI,CAAC,aAAa;oCArwBkB,pCAswBjD,YAAM,KAAK,EAAE,IAAI,CAAC,aAAa;AAC/B,YAAM,KAAK,EAAE,CAAC;AACd,YAAM,MAAM,EAAE,CAAC;AACf,SAAK,CAAC;+BAvwBL,CAAC,hCAwwBF,QAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;AAC9D,KAAG;AACH;AAAE;AACF;AAC+B,ICzuBlB,wBAAwB,gCAArC,MAAa,wBAAwB;AACrC,IAAE,OAAO,OAAO,CAAC,MAAoB;AAAK,QACtC,OAAO;AACX,YAAM,QAAQ,EAAE,0BAAwB;AACxC,YAAM,SAAS,EAAE;AACjB,gBAAQ,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,MAAM,EAAE;AACxD,aAAO;AACP,SAAK,CAAC;AACN,KAAG;AACH,EAAC;CATY,wBAAwB,kDAlCpC,QAAQ,CAAC,WACR,YAAY,EAAE,eACZ;sBAA0B,eAC1B,sBAAsB,eACtB,wBAAwB;MACxB,sBAAsB,YACvB,WACD,OAAO,EAAE,eACP;MAAgB,eAChB;UAAe;EACf,aAAa,eACb;eAAoB;KACpB,aAAa;UACb;EAAsB,eACtB;MAAY,eACZ;IAAe,YAChB;KACD,OAAO,EAAE,eACP;EAAgB,eAChB;OAAe,eACf;YAAa,eACb;iBAAoB;SACpB,aAAa;CACb,sBAAsB,eACtB,sBAAsB,YACvB,WACD,eAAe,EAAE;MACf;EAAsB,YACvB;QACD,SAAS,EAAE,eACT;;AAAgB,eAChB,aAAa,YACd,OACF,CAAC;IACW,wBAAwB,CASpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oEAAC;AACF;AC7DA;AACA;AACA;AAAI;ACFJ;AACC;AACC;AAED;AAAC;AAGkC","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {ImageDimensions} from '../PublicModels';\r\nimport {LimitException, XYPosition} from '../PrivateModels';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LimitsService {\r\n\r\n\r\n  private limitDirections: RolesArray = ['left', 'right', 'top', 'bottom'];\r\n  /**\r\n   * stores the crop limits limits\r\n   */\r\n  private _limits = {\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0\r\n  };\r\n  /**\r\n   * stores the array of the draggable points displayed on the crop area\r\n   */\r\n  private _points: Array<PointPositionChange> = [];\r\n  /**\r\n   * stores the pane dimensions\r\n   */\r\n  private _paneDimensions: ImageDimensions;\r\n\r\n  // *********** //\r\n  // Observables //\r\n  // *********** //\r\n  public positions: BehaviorSubject<Array<PointPositionChange>> = new BehaviorSubject<Array<PointPositionChange>>(Array.from(this._points));\r\n  public repositionEvent: BehaviorSubject<Array<PointPositionChange>> = new BehaviorSubject<Array<PointPositionChange>>([]);\r\n  public limits: BehaviorSubject<AreaLimits> = new BehaviorSubject<AreaLimits>(this._limits);\r\n  public paneDimensions: BehaviorSubject<ImageDimensions> = new BehaviorSubject({width: 0, height: 0});\r\n\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * set privew pane dimensions\r\n   */\r\n  public setPaneDimensions(dimensions: ImageDimensions) {\r\n    return new Promise((resolve, reject) => {\r\n      this._paneDimensions = dimensions;\r\n      this.paneDimensions.next(dimensions);\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * repositions points externally\r\n   */\r\n  public repositionPoints(positions) {\r\n    this._points = positions;\r\n    positions.forEach(position => {\r\n      this.positionChange(position);\r\n    });\r\n    this.repositionEvent.next(positions);\r\n  }\r\n\r\n  /**\r\n   * updates limits and point positions and calls next on the observables\r\n   * @param positionChangeData - position change event data\r\n   */\r\n  public positionChange(positionChangeData: PointPositionChange) {\r\n    // update positions according to current position change\r\n    this.updatePosition(positionChangeData);\r\n\r\n    // for each direction:\r\n    // 1. filter the _points that have a role as the direction's limit\r\n    // 2. for top and left find max x | y values, and min for right and bottom\r\n    this.limitDirections.forEach(direction => {\r\n      const relevantPoints = this._points.filter(point => {\r\n        return point.roles.includes(direction);\r\n      })\r\n        .map((point: PointPositionChange) => {\r\n          return point[this.getDirectionAxis(direction)];\r\n        });\r\n      let limit;\r\n      if (direction === 'top' || direction === 'left') {\r\n        limit = Math.max(...relevantPoints);\r\n      }\r\n      if (direction === 'right' || direction === 'bottom') {\r\n        limit = Math.min(...relevantPoints);\r\n      }\r\n      this._limits[direction] = limit;\r\n    });\r\n\r\n    this.limits.next(this._limits);\r\n    this.positions.next(Array.from(this._points));\r\n  }\r\n\r\n  /**\r\n   * updates the position of the point\r\n   * @param positionChange - position change event data\r\n   */\r\n  public updatePosition(positionChange: PointPositionChange) {\r\n    // finds the current position of the point by it's roles, than splices it for the new position or pushes it if it's not yet in the array\r\n    const index = this._points.findIndex(point => {\r\n      return this.compareArray(positionChange.roles, point.roles);\r\n    });\r\n    if (index === -1) {\r\n      this._points.push(positionChange);\r\n    } else {\r\n      this._points.splice(index, 1, positionChange);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * check if a position change event exceeds the limits\r\n   * @param positionChange - position change event data\r\n   * @returns LimitException0\r\n   */\r\n  public exceedsLimit(positionChange: PointPositionChange): LimitException {\r\n    const pointLimits = this.limitDirections.filter(direction => {\r\n      return !positionChange.roles.includes(direction);\r\n    });\r\n\r\n    const limitException: LimitException = {\r\n      exceeds: false,\r\n      resetCoefficients: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      resetCoordinates: {\r\n        x: positionChange.x,\r\n        y: positionChange.y\r\n      }\r\n    };\r\n\r\n    // limit directions are the opposite sides of the point's roles\r\n    pointLimits.forEach(direction => {\r\n      const directionAxis = this.getDirectionAxis(direction);\r\n      if (direction === 'top' || direction === 'left') {\r\n        if (positionChange[directionAxis] < this._limits[direction]) {\r\n          limitException.resetCoefficients[directionAxis] = 1;\r\n          limitException.resetCoordinates[directionAxis] = this._limits[direction];\r\n        }\r\n      } else if (direction === 'right' || direction === 'bottom') {\r\n        if (positionChange[directionAxis] > this._limits[direction]) {\r\n          limitException.resetCoefficients[directionAxis] = -1;\r\n          limitException.resetCoordinates[directionAxis] = this._limits[direction];\r\n        }\r\n      }\r\n    });\r\n\r\n    if (limitException.resetCoefficients.x !== 0 || limitException.resetCoefficients.y !== 0) {\r\n      limitException.exceeds = true;\r\n    }\r\n\r\n    return limitException;\r\n  }\r\n\r\n  /**\r\n   * rotate crop tool points clockwise\r\n   * @param resizeRatios - ratio between the new dimensions and the previous\r\n   * @param initialPreviewDimensions - preview pane dimensions before rotation\r\n   * @param initialPositions - current positions before rotation\r\n   */\r\n  public rotateClockwise(resizeRatios, initialPreviewDimensions, initialPositions: Array<PointPositionChange>) {\r\n    // convert positions to ratio between position to initial pane dimension\r\n    initialPositions = initialPositions.map(point => {\r\n      return new PositionChangeData({\r\n        x: point.x / initialPreviewDimensions.width,\r\n        y: point.y / initialPreviewDimensions.height,\r\n      }, point.roles);\r\n    });\r\n    this.repositionPoints(initialPositions.map(point => {\r\n      return this.rotateCornerClockwise(point);\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * returns the corner positions after a 90 degrees clockwise rotation\r\n   */\r\n  private rotateCornerClockwise(corner: PointPositionChange): PointPositionChange {\r\n    const rotated: PointPositionChange = {\r\n      x: this._paneDimensions.width * (1 - corner.y),\r\n      y: this._paneDimensions.height * corner.x,\r\n      roles: []\r\n    };\r\n    // rotates corner according to order\r\n    const order: Array<RolesArray> = [\r\n      ['bottom', 'left'],\r\n      ['top', 'left'],\r\n      ['top', 'right'],\r\n      ['bottom', 'right'],\r\n      ['bottom', 'left']\r\n    ];\r\n    rotated.roles = order[order.findIndex(roles => {\r\n      return this.compareArray(roles, corner.roles);\r\n    }) + 1];\r\n    return rotated;\r\n  }\r\n\r\n  /**\r\n   * checks if two array contain the same values\r\n   * @param array1 - array 1\r\n   * @param array2 - array 2\r\n   * @returns boolean\r\n   */\r\n  public compareArray(array1: Array<string>, array2: Array<string>): boolean {\r\n    return array1.every((element) => {\r\n      return array2.includes(element);\r\n    }) && array1.length === array2.length;\r\n  }\r\n\r\n  private getDirectionAxis(direction) {\r\n    return {\r\n      left: 'x',\r\n      right: 'x',\r\n      top: 'y',\r\n      bottom: 'y'\r\n    }[direction];\r\n  }\r\n}\r\n\r\n\r\nexport interface PointPositionChange {\r\n  x: number;\r\n  y: number;\r\n  roles: RolesArray;\r\n}\r\n\r\nexport interface AreaLimits {\r\n  top: number;\r\n  bottom: number;\r\n  right: number;\r\n  left: number;\r\n}\r\n\r\nexport type RolesArray = Array<Direction>;\r\n\r\nexport class PositionChangeData implements PointPositionChange {\r\n  x: number;\r\n  y: number;\r\n  roles: RolesArray;\r\n\r\n  constructor(position: XYPosition, roles: RolesArray) {\r\n    this.x = position.x;\r\n    this.y = position.y;\r\n    this.roles = roles;\r\n  }\r\n}\r\n\r\nexport type Direction = 'left' | 'right' | 'top' | 'bottom';\r\n","import {AfterViewInit, Component, Input} from '@angular/core';\r\nimport {LimitsService, PointPositionChange, PositionChangeData} from '../../services/limits.service';\r\nimport {ImageDimensions} from '../../PublicModels';\r\nimport {LimitException, XYPosition} from '../../PrivateModels';\r\n\r\n@Component({\r\n  selector: 'ngx-draggable-point',\r\n  templateUrl: './ngx-draggable-point.component.html',\r\n})\r\nexport class NgxDraggablePointComponent implements AfterViewInit {\r\n  @Input() width = 10;\r\n  @Input() height = 10;\r\n  @Input() color = '#3cabe2';\r\n  @Input() shape: 'rect' | 'circle' = 'rect';\r\n  @Input() pointOptions: 'rect' | 'circle' = 'rect';\r\n  @Input() limitRoles: Array<'left'|'right'|'top'|'bottom'>;\r\n  @Input() startPosition: XYPosition;\r\n  @Input() container: HTMLElement;\r\n  @Input() private _currentPosition: XYPosition;\r\n  position: XYPosition = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n  private _paneDimensions: ImageDimensions;\r\n  resetPosition: XYPosition;\r\n\r\n  constructor(private limitsService: LimitsService) {}\r\n\r\n  ngAfterViewInit() {\r\n    Object.keys(this.pointOptions).forEach(key => {\r\n      this[key] = this.pointOptions[key];\r\n    });\r\n    // subscribe to pane dimensions changes\r\n    this.limitsService.paneDimensions.subscribe(dimensions => {\r\n      if (dimensions.width > 0 && dimensions.width > 0) {\r\n        this._paneDimensions = {\r\n          width: dimensions.width,\r\n          height: dimensions.height\r\n        };\r\n        this.position = this.getInitialPosition(dimensions);\r\n        this.limitsService.positionChange(new PositionChangeData(this.position, this.limitRoles));\r\n      }\r\n    });\r\n    // subscribe to external reposition events\r\n    this.limitsService.repositionEvent.subscribe(positions => {\r\n      if (positions.length > 0) {\r\n        this.externalReposition(positions);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * returns a css style object for the point\r\n   */\r\n  pointStyle() {\r\n    return {\r\n      width: this.width + 'px',\r\n      height: this.height + 'px',\r\n      'background-color': this.color,\r\n      'border-radius': this.shape === 'circle' ? '100%' : 0,\r\n      position: 'absolute'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * registers a position change on the limits service, and adjusts position if necessary\r\n   * @param position - the current position of the point\r\n   */\r\n  positionChange(position: XYPosition) {\r\n    const positionChangeData = new PositionChangeData(position, this.limitRoles);\r\n    const limitException = this.limitsService.exceedsLimit(positionChangeData);\r\n    if (limitException.exceeds) {\r\n      // if exceeds limits, reposition\r\n      this.resetPosition = limitException.resetCoordinates;\r\n    } else {\r\n      this.limitsService.positionChange(positionChangeData);\r\n      this._currentPosition = position;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * adjusts the position of the point after a limit exception\r\n   */\r\n  private adjustPosition(limitException: LimitException) {\r\n    const newPosition = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    Object.keys(this.startPosition).forEach(axis => {\r\n      newPosition[axis] = limitException.resetCoordinates[axis] + limitException.resetCoefficients[axis];\r\n    });\r\n    this.position = newPosition;\r\n    this.limitsService.positionChange(new PositionChangeData(this.position, this.limitRoles));\r\n  }\r\n\r\n  /**\r\n   * called on movement end, checks if last position exceeded the limits ad adjusts\r\n   */\r\n  movementEnd(position: XYPosition) {\r\n    let positionChangeData = new PositionChangeData(position, this.limitRoles);\r\n    const limitException = this.limitsService.exceedsLimit(positionChangeData);\r\n    if (limitException.exceeds) {\r\n      this.resetPosition = limitException.resetCoordinates;\r\n      if (limitException.exceeds) {\r\n        this.adjustPosition(limitException);\r\n        positionChangeData = new PositionChangeData(this.position, this.limitRoles);\r\n        this.limitsService.updatePosition(positionChangeData);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * calculates the initial positions of the point by it's roles\r\n   * @param dimensions - dimensions of the pane in which the point is located\r\n   */\r\n  private getInitialPosition(dimensions: ImageDimensions) {\r\n    return {\r\n      x: this.limitRoles.includes('left') ? 0 : dimensions.width - this.width / 2,\r\n      y: this.limitRoles.includes('top') ? 0 : dimensions.height - this.height / 2\r\n    };\r\n  }\r\n\r\n  /**\r\n   * repositions the point after an external reposition event\r\n   * @param positions - an array of all points on the pane\r\n   */\r\n  private externalReposition(positions: Array<PointPositionChange>) {\r\n    positions.forEach(position => {\r\n      if (this.limitsService.compareArray(this.limitRoles, position.roles)) {\r\n        position = this.enforcePaneLimits(position);\r\n        this.position = {\r\n          x: position.x,\r\n          y: position.y\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * returns a new point position if the movement exceeded the pane limit\r\n   */\r\n  private enforcePaneLimits(position: PointPositionChange): PointPositionChange {\r\n    if (this._paneDimensions.width === 0 || this._paneDimensions.height === 0) {\r\n      return position;\r\n    } else {\r\n      if (position.x > this._paneDimensions.width) { position.x = this._paneDimensions.width; }\r\n      if (position.x < 0) { position.x = 1; }\r\n      if (position.y > this._paneDimensions.height) { position.y = this._paneDimensions.height; }\r\n      if (position.y < 0) { position.y = 1; }\r\n    }\r\n    return position;\r\n  }\r\n}\r\n\r\n","import {Component, EventEmitter, Inject, Output} from '@angular/core';\r\nimport {EditorActionButton} from '../../PrivateModels';\r\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet';\r\n\r\n@Component({\r\n  selector: 'ngx-filter-menu',\r\n  templateUrl: './ngx-filter-menu.component.html',\r\n})\r\nexport class NgxFilterMenuComponent {\r\n  filterOptions: Array<EditorActionButton> = [\r\n    {\r\n      name: 'default',\r\n      icon: 'filter_b_and_w',\r\n      action: (filter) => {\r\n        this.filterSelected.emit(filter);\r\n      },\r\n      text: 'B&W'\r\n    },\r\n    {\r\n      name: 'bw2',\r\n      icon: 'filter_b_and_w',\r\n      action: (filter) => {\r\n        this.filterSelected.emit(filter);\r\n      },\r\n      text: 'B&W 2'\r\n    },\r\n    {\r\n      name: 'bw3',\r\n      icon: 'blur_on',\r\n      action: (filter) => {\r\n        this.filterSelected.emit(filter);\r\n      },\r\n      text: 'B&W 3'\r\n    },\r\n    {\r\n      name: 'magic_color',\r\n      icon: 'filter_vintage',\r\n      action: (filter) => {\r\n        this.filterSelected.emit(filter);\r\n      },\r\n      text: 'Magic Color'\r\n    },\r\n    {\r\n      name: 'original',\r\n      icon: 'crop_original',\r\n      action: (filter) => {\r\n        this.filterSelected.emit(filter);\r\n      },\r\n      text: 'Original'\r\n    },\r\n  ];\r\n  @Output() filterSelected: EventEmitter<string> = new EventEmitter();\r\n  selectOption(optionName) {\r\n    this.data.filter = optionName;\r\n    this.bottomSheetRef.dismiss();\r\n  }\r\n\r\n  constructor(private bottomSheetRef: MatBottomSheetRef<NgxFilterMenuComponent>,\r\n              @Inject(MAT_BOTTOM_SHEET_DATA) public data: any\r\n              ) {}\r\n\r\n}\r\n","import {AfterViewInit, Component, Input, ViewChild} from '@angular/core';\r\nimport {LimitsService, PointPositionChange} from '../../services/limits.service';\r\nimport {ImageDimensions} from '../../PublicModels';\r\n\r\n@Component({\r\n  selector: 'ngx-shape-outine',\r\n  templateUrl: './ngx-shape-outline.component.html',\r\n})\r\nexport class NgxShapeOutlineComponent implements AfterViewInit {\r\n\r\n  @Input() color = '#3cabe2';\r\n  @Input() weight: number;\r\n  @Input() dimensions: ImageDimensions;\r\n  @ViewChild('outline') canvas;\r\n\r\n  private _points: Array<PointPositionChange>;\r\n  private _sortedPoints: Array<PointPositionChange>;\r\n  constructor(private limitsService: LimitsService) {}\r\n\r\n  ngAfterViewInit() {\r\n    // init drawing canvas dimensions\r\n    this.canvas.nativeElement.width = this.dimensions.width;\r\n    this.canvas.nativeElement.height = this.dimensions.height;\r\n    this.limitsService.positions.subscribe(positions => {\r\n      if (positions.length === 4) {\r\n        this._points = positions;\r\n        this.sortPoints();\r\n        this.clearCanvas();\r\n        this.drawShape();\r\n      }\r\n    });\r\n    // subscribe to changes in the pane's dimensions\r\n    this.limitsService.paneDimensions.subscribe(dimensions => {\r\n      this.clearCanvas();\r\n      this.canvas.nativeElement.width = dimensions.width;\r\n      this.canvas.nativeElement.height = dimensions.height;\r\n    });\r\n    // subscribe to reposition events\r\n    this.limitsService.repositionEvent.subscribe( positions => {\r\n      if (positions.length === 4) {\r\n        setTimeout( () => {\r\n          this.clearCanvas();\r\n          this.sortPoints();\r\n          this.drawShape();\r\n        }, 10);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * clears the shape canvas\r\n   */\r\n  private clearCanvas() {\r\n    const canvas = this.canvas.nativeElement;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, this.dimensions.width, this.dimensions.height);\r\n  }\r\n\r\n  /**\r\n   * sorts the array of points according to their clockwise alignment\r\n   */\r\n  private sortPoints() {\r\n    const _points = Array.from(this._points);\r\n    const sortedPoints = [];\r\n\r\n    const sortOrder = {\r\n      vertical: ['top', 'top', 'bottom', 'bottom'],\r\n      horizontal: ['left', 'right', 'right', 'left']\r\n    };\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      const roles = Array.from([sortOrder.vertical[i], sortOrder.horizontal[i]]);\r\n      sortedPoints.push(_points.filter((point) => {\r\n        return this.limitsService.compareArray(point.roles, roles);\r\n      })[0]);\r\n\r\n    }\r\n    this._sortedPoints = sortedPoints;\r\n  }\r\n\r\n  /**\r\n   * draws a line between the points according to their order\r\n   */\r\n  private drawShape() {\r\n    const canvas = this.canvas.nativeElement;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.lineWidth = this.weight;\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    this._sortedPoints.forEach((point, index) => {\r\n      if (index === 0) {\r\n        ctx.moveTo(point.x, point.y);\r\n      }\r\n      if (index !== this._sortedPoints.length - 1) {\r\n        const nextPoint = this._sortedPoints[index + 1];\r\n        ctx.lineTo(nextPoint.x, nextPoint.y);\r\n      } else {\r\n        ctx.closePath();\r\n      }\r\n    });\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\n\r\n","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {LimitsService, PointPositionChange, PositionChangeData, RolesArray} from '../../services/limits.service';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\nimport {NgxFilterMenuComponent} from '../filter-menu/ngx-filter-menu.component';\r\nimport {PointShape} from '../../PrivateModels';\r\n// import {NgxOpenCVService} from '../../services/ngx-opencv.service';\r\nimport {ImageDimensions, DocScannerConfig, OpenCVState} from '../../PublicModels';\r\nimport {EditorActionButton, PointOptions} from '../../PrivateModels';\r\nimport {NgxOpenCVService} from 'ngx-opencv';\r\n\r\ndeclare var cv: any;\r\n\r\n@Component({\r\n  selector: 'ngx-doc-scanner',\r\n  templateUrl: './ngx-doc-scanner.component.html',\r\n  styleUrls: ['./ngx-doc-scanner.component.scss']\r\n})\r\nexport class NgxDocScannerComponent implements OnInit {\r\n  /**\r\n   * editor config object\r\n   */\r\n  options: ImageEditorConfig;\r\n  // ************* //\r\n  // EDITOR CONFIG //\r\n  // ************* //\r\n  /**\r\n   * an array of action buttons displayed on the editor screen\r\n   */\r\n  private editorButtons: Array<EditorActionButton> = [\r\n    {\r\n      name: 'exit',\r\n      action: () => {\r\n        this.exitEditor.emit('canceled');\r\n      },\r\n      icon: 'arrow_back',\r\n      type: 'fab',\r\n      mode: 'crop'\r\n    },\r\n    {\r\n      name: 'rotate',\r\n      action: this.rotateImage.bind(this),\r\n      icon: 'rotate_right',\r\n      type: 'fab',\r\n      mode: 'crop'\r\n    },\r\n    {\r\n      name: 'done_crop',\r\n      action: async () => {\r\n        this.mode = 'color';\r\n        await this.transform();\r\n        await this.applyFilter(true);\r\n      },\r\n      icon: 'done',\r\n      type: 'fab',\r\n      mode: 'crop'\r\n    },\r\n    {\r\n      name: 'back',\r\n      action: () => {\r\n        this.mode = 'crop';\r\n        this.loadFile(this.originalImage);\r\n      },\r\n      icon: 'arrow_back',\r\n      type: 'fab',\r\n      mode: 'color'\r\n    },\r\n    {\r\n      name: 'filter',\r\n      action: () => {\r\n        return this.chooseFilters();\r\n      },\r\n      icon: 'photo_filter',\r\n      type: 'fab',\r\n      mode: 'color'\r\n    },\r\n    {\r\n      name: 'upload',\r\n      action: this.exportImage.bind(this),\r\n      icon: 'cloud_upload',\r\n      type: 'fab',\r\n      mode: 'color'\r\n    },\r\n  ];\r\n  /**\r\n   * returns an array of buttons according to the editor mode\r\n   */\r\n  get displayedButtons() {\r\n    return this.editorButtons.filter(button => {\r\n      return button.mode === this.mode;\r\n    });\r\n  }\r\n  /**\r\n   * max width of the preview area\r\n   */\r\n  private maxPreviewWidth: number;\r\n  /**\r\n   * dimensions of the image container\r\n   */\r\n  imageDivStyle: {[key: string]: string|number};\r\n  /**\r\n   * editor div style\r\n   */\r\n  editorStyle: {[key: string]: string|number};\r\n\r\n  // ************* //\r\n  // EDITOR STATE //\r\n  // ************* //\r\n  /**\r\n   * state of opencv loading\r\n   */\r\n  private cvState: string;\r\n  /**\r\n   * true after the image is loaded and preview is displayed\r\n   */\r\n  imageLoaded = false;\r\n  /**\r\n   * editor mode\r\n   */\r\n  mode: 'crop'|'color' = 'crop';\r\n  /**\r\n   * filter selected by the user, returned by the filter selector bottom sheet\r\n   */\r\n  private selectedFilter = 'default';\r\n\r\n  // ******************* //\r\n  // OPERATION VARIABLES //\r\n  // ******************* //\r\n  /**\r\n   * viewport dimensions\r\n   */\r\n  private screenDimensions: ImageDimensions;\r\n  /**\r\n   * image dimensions\r\n   */\r\n  private imageDimensions: ImageDimensions = {\r\n    width: 0,\r\n    height: 0\r\n  };\r\n  /**\r\n   * dimensions of the preview pane\r\n   */\r\n  previewDimensions: ImageDimensions;\r\n  /**\r\n   * ration between preview image and original\r\n   */\r\n  private imageResizeRatio: number;\r\n  /**\r\n   * stores the original image for reset purposes\r\n   */\r\n  private originalImage: File;\r\n  /**\r\n   * stores the edited image\r\n   */\r\n  private editedImage: HTMLCanvasElement;\r\n  /**\r\n   * stores the preview image as canvas\r\n   */\r\n  @ViewChild('PreviewCanvas', { read: ElementRef, static: true }) private previewCanvas: ElementRef;\r\n  /**\r\n   * an array of points used by the crop tool\r\n   */\r\n  private points: Array<PointPositionChange>;\r\n\r\n  // ************** //\r\n  // EVENT EMITTERS //\r\n  // ************** //\r\n  /**\r\n   * optional binding to the exit button of the editor\r\n   */\r\n  @Output() exitEditor: EventEmitter<string> = new EventEmitter<string>();\r\n  /**\r\n   * fires on edit completion\r\n   */\r\n  @Output() editResult: EventEmitter<Blob> = new EventEmitter<Blob>();\r\n  /**\r\n   * emits errors, can be linked to an error handler of choice\r\n   */\r\n  @Output() error: EventEmitter<any> = new EventEmitter<any>();\r\n  /**\r\n   * emits the loading status of the cv module.\r\n   */\r\n  @Output() ready: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  /**\r\n   * emits true when processing is done, false when completed\r\n   */\r\n  @Output() processing: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  // ****** //\r\n  // INPUTS //\r\n  // ****** //\r\n  /**\r\n   * set image for editing\r\n   * @param file - file from form input\r\n   */\r\n  @Input() set file(file: File) {\r\n    if (file) {\r\n      setTimeout(() => {\r\n        this.processing.emit(true);\r\n      }, 5);\r\n      this.imageLoaded = false;\r\n      this.originalImage = file;\r\n      this.ngxOpenCv.cvState.subscribe(\r\n        async (cvState: OpenCVState) => {\r\n          if (cvState.ready) {\r\n            // read file to image & canvas\r\n            await this.loadFile(file);\r\n            this.processing.emit(false);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * editor configuration object\r\n   */\r\n  @Input() config: DocScannerConfig;\r\n\r\n\r\n  constructor(private ngxOpenCv: NgxOpenCVService, private limitsService: LimitsService, private bottomSheet: MatBottomSheet) {\r\n    this.screenDimensions = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight\r\n    };\r\n\r\n    // subscribe to status of cv module\r\n    this.ngxOpenCv.cvState.subscribe((cvState: OpenCVState) => {\r\n      this.cvState = cvState.state;\r\n      this.ready.emit(cvState.ready);\r\n      if (cvState.error) {\r\n        this.error.emit(new Error('error loading cv'));\r\n      } else if (cvState.loading) {\r\n        this.processing.emit(true);\r\n      } else if (cvState.ready) {\r\n        this.processing.emit(false);\r\n      }\r\n    });\r\n\r\n    // subscribe to positions of crop tool\r\n    this.limitsService.positions.subscribe(points => {\r\n      this.points = points;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // set options from config object\r\n    this.options = new ImageEditorConfig(this.config);\r\n    // set export image icon\r\n    this.editorButtons.forEach(button => {\r\n      if (button.name === 'upload') {\r\n        button.icon = this.options.exportImageIcon;\r\n      }\r\n    });\r\n    this.maxPreviewWidth = this.options.maxPreviewWidth;\r\n    this.editorStyle = this.options.editorStyle;\r\n  }\r\n\r\n  // ***************************** //\r\n  // editor action buttons methods //\r\n  // ***************************** //\r\n\r\n  /**\r\n   * emits the exitEditor event\r\n   */\r\n  exit() {\r\n    this.exitEditor.emit('canceled');\r\n  }\r\n\r\n  /**\r\n   * applies the selected filter, and when done emits the resulted image\r\n   */\r\n  private async exportImage() {\r\n    await this.applyFilter(false);\r\n    if (this.options.maxImageDimensions) {\r\n      this.resize(this.editedImage)\r\n        .then(resizeResult => {\r\n          resizeResult.toBlob((blob) => {\r\n            this.editResult.emit(blob);\r\n            this.processing.emit(false);\r\n          }, this.originalImage.type);\r\n        });\r\n    } else {\r\n      this.editedImage.toBlob((blob) => {\r\n        this.editResult.emit(blob);\r\n        this.processing.emit(false);\r\n      }, this.originalImage.type);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * open the bottom sheet for selecting filters, and applies the selected filter in preview mode\r\n   */\r\n  private chooseFilters() {\r\n    const data = { filter: this.selectedFilter };\r\n    const bottomSheetRef = this.bottomSheet.open(NgxFilterMenuComponent, {\r\n      data: data\r\n    });\r\n    bottomSheetRef.afterDismissed().subscribe(() => {\r\n      this.selectedFilter = data.filter;\r\n      this.applyFilter(true);\r\n    });\r\n\r\n  }\r\n\r\n  // *************************** //\r\n  // File Input & Output Methods //\r\n  // *************************** //\r\n  /**\r\n   * load image from input field\r\n   */\r\n  private loadFile(file: File) {\r\n    return new Promise(async (resolve, reject) => {\r\n      this.processing.emit(true);\r\n      try {\r\n        await this.readImage(file);\r\n      } catch (err) {\r\n        console.error(err);\r\n        this.error.emit(new Error(err));\r\n      }\r\n      try {\r\n        await this.showPreview();\r\n      } catch (err) {\r\n        console.error(err);\r\n        this.error.emit(new Error(err));\r\n      }\r\n      // set pane limits\r\n      // show points\r\n      this.imageLoaded = true;\r\n      await this.limitsService.setPaneDimensions({width: this.previewDimensions.width, height: this.previewDimensions.height});\r\n      setTimeout(async () => {\r\n        await this.detectContours();\r\n        this.processing.emit(false);\r\n        resolve();\r\n      }, 15);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * read image from File object\r\n   */\r\n  private readImage(file: File) {\r\n    return new Promise(async (resolve, reject) => {\r\n      let imageSrc;\r\n      try {\r\n        imageSrc = await readFile();\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n      const img = new Image();\r\n      img.onload = async () => {\r\n        // set edited image canvas and dimensions\r\n        this.editedImage = <HTMLCanvasElement> document.createElement('canvas');\r\n        this.editedImage.width = img.width;\r\n        this.editedImage.height = img.height;\r\n        const ctx = this.editedImage.getContext('2d');\r\n        ctx.drawImage(img, 0, 0);\r\n        // resize image if larger than max image size\r\n        const width = img.width > img.height ? img.height : img.width;\r\n        if (width > this.options.maxImageDimensions.width) {\r\n          this.editedImage = await this.resize(this.editedImage);\r\n        }\r\n        this.imageDimensions.width = this.editedImage.width;\r\n        this.imageDimensions.height = this.editedImage.height;\r\n        this.setPreviewPaneDimensions(this.editedImage);\r\n        resolve();\r\n      };\r\n      img.src = imageSrc;\r\n    });\r\n\r\n    /**\r\n     * read file from input field\r\n     */\r\n    function readFile() {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n          resolve(reader.result);\r\n        };\r\n        reader.onerror = (err) => {\r\n          reject(err);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    }\r\n  }\r\n\r\n  // ************************ //\r\n  // Image Processing Methods //\r\n  // ************************ //\r\n  /**\r\n   * rotate image 90 degrees\r\n   */\r\n  private rotateImage() {\r\n    return new Promise((resolve, reject) => {\r\n      this.processing.emit(true);\r\n      setTimeout(() => {\r\n        const dst = cv.imread(this.editedImage);\r\n        // const dst = new cv.Mat();\r\n        cv.transpose(dst, dst);\r\n        cv.flip(dst, dst, 1);\r\n        cv.imshow(this.editedImage, dst);\r\n        // src.delete();\r\n        dst.delete();\r\n        // save current preview dimensions and positions\r\n        const initialPreviewDimensions = {width: 0, height: 0};\r\n        Object.assign(initialPreviewDimensions, this.previewDimensions);\r\n        const initialPositions = Array.from(this.points);\r\n        // get new dimensions\r\n        // set new preview pane dimensions\r\n        this.setPreviewPaneDimensions(this.editedImage);\r\n        // get preview pane resize ratio\r\n        const previewResizeRatios = {\r\n          width: this.previewDimensions.width / initialPreviewDimensions.width,\r\n          height: this.previewDimensions.height / initialPreviewDimensions.height\r\n        };\r\n        // set new preview pane dimensions\r\n\r\n        this.limitsService.rotateClockwise(previewResizeRatios, initialPreviewDimensions, initialPositions);\r\n        this.showPreview().then(() => {\r\n          this.processing.emit(false);\r\n          resolve();\r\n        });\r\n      }, 30);\r\n    });\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * detects the contours of the document and\r\n   **/\r\n  private detectContours(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.processing.emit(true);\r\n      setTimeout(() => {\r\n        // load the image and compute the ratio of the old height to the new height, clone it, and resize it\r\n        const processingResizeRatio = 0.5;\r\n        const dst = cv.imread(this.editedImage);\r\n        const dsize = new cv.Size(dst.rows * processingResizeRatio, dst.cols * processingResizeRatio);\r\n        const ksize = new cv.Size(5, 5);\r\n        // convert the image to grayscale, blur it, and find edges in the image\r\n        cv.cvtColor(dst, dst, cv.COLOR_RGBA2GRAY, 0);\r\n        cv.GaussianBlur(dst, dst, ksize, 0, 0, cv.BORDER_DEFAULT);\r\n        cv.Canny(dst, dst, 75, 200);\r\n        // find contours\r\n        cv.threshold(dst, dst, 120, 200, cv.THRESH_BINARY);\r\n        const contours = new cv.MatVector();\r\n        const hierarchy = new cv.Mat();\r\n        cv.findContours(dst, contours, hierarchy, cv.RETR_CCOMP, cv.CHAIN_APPROX_SIMPLE);\r\n        const rect = cv.boundingRect(dst);\r\n        dst.delete(); hierarchy.delete(); contours.delete();\r\n        // transform the rectangle into a set of points\r\n        Object.keys(rect).forEach(key => {\r\n          rect[key] = rect[key]  * this.imageResizeRatio;\r\n        });\r\n\r\n        const contourCoordinates = [\r\n          new PositionChangeData({x: rect.x, y: rect.y}, ['left', 'top']),\r\n          new PositionChangeData({x: rect.x + rect.width, y: rect.y}, ['right', 'top']),\r\n          new PositionChangeData({x: rect.x + rect.width, y: rect.y + rect.height}, ['right', 'bottom']),\r\n          new PositionChangeData({x: rect.x, y: rect.y + rect.height}, ['left', 'bottom']),\r\n        ];\r\n\r\n        this.limitsService.repositionPoints(contourCoordinates);\r\n        // this.processing.emit(false);\r\n        resolve();\r\n      }, 30);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * apply perspective transform\r\n   */\r\n  private transform(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.processing.emit(true);\r\n      setTimeout(() => {\r\n        const dst = cv.imread(this.editedImage);\r\n\r\n        // create source coordinates matrix\r\n        const sourceCoordinates = [\r\n          this.getPoint(['top', 'left']),\r\n          this.getPoint(['top', 'right']),\r\n          this.getPoint(['bottom', 'right']),\r\n          this.getPoint(['bottom', 'left'])\r\n        ].map(point => {\r\n          return [point.x / this.imageResizeRatio, point.y / this.imageResizeRatio];\r\n        });\r\n\r\n        // get max width\r\n        const bottomWidth = this.getPoint(['bottom', 'right']).x - this.getPoint(['bottom', 'left']).x;\r\n        const topWidth = this.getPoint(['top', 'right']).x - this.getPoint(['top', 'left']).x;\r\n        const maxWidth = Math.max(bottomWidth, topWidth) / this.imageResizeRatio;\r\n        // get max height\r\n        const leftHeight = this.getPoint(['bottom', 'left']).y - this.getPoint(['top', 'left']).y;\r\n        const rightHeight = this.getPoint(['bottom', 'right']).y - this.getPoint(['top', 'right']).y;\r\n        const maxHeight = Math.max(leftHeight, rightHeight) / this.imageResizeRatio;\r\n        // create dest coordinates matrix\r\n        const destCoordinates = [\r\n          [0, 0],\r\n          [maxWidth - 1, 0],\r\n          [maxWidth - 1, maxHeight - 1],\r\n          [0, maxHeight - 1]\r\n        ];\r\n\r\n        // convert to open cv matrix objects\r\n        const Ms = cv.matFromArray(4, 1, cv.CV_32FC2, [].concat(...sourceCoordinates));\r\n        const Md = cv.matFromArray(4, 1, cv.CV_32FC2, [].concat(...destCoordinates));\r\n        const transformMatrix = cv.getPerspectiveTransform(Ms, Md);\r\n        // set new image size\r\n        const dsize = new cv.Size(maxWidth, maxHeight);\r\n        // perform warp\r\n        cv.warpPerspective(dst, dst, transformMatrix, dsize, cv.INTER_LINEAR, cv.BORDER_CONSTANT, new cv.Scalar());\r\n        cv.imshow(this.editedImage, dst);\r\n\r\n        dst.delete(); Ms.delete(); Md.delete(); transformMatrix.delete();\r\n\r\n        this.setPreviewPaneDimensions(this.editedImage);\r\n        this.showPreview().then(() => {\r\n          this.processing.emit(false);\r\n          resolve();\r\n        });\r\n      }, 30);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * applies the selected filter to the image\r\n   * @param preview - when true, will not apply the filter to the edited image but only display a preview.\r\n   * when false, will apply to editedImage\r\n   */\r\n  private applyFilter(preview: boolean): Promise<void> {\r\n    return new Promise(async (resolve, reject) => {\r\n      this.processing.emit(true);\r\n      // default options\r\n      const options = {\r\n        blur: false,\r\n        th: true,\r\n        thMode: cv.ADAPTIVE_THRESH_MEAN_C,\r\n        thMeanCorrection: 10,\r\n        thBlockSize: 25,\r\n        thMax: 255,\r\n        grayScale: true,\r\n      };\r\n      const dst = cv.imread(this.editedImage);\r\n\r\n      switch (this.selectedFilter) {\r\n        case 'original':\r\n          options.th = false;\r\n          options.grayScale = false;\r\n          options.blur = false;\r\n          break;\r\n        case 'magic_color':\r\n          options.grayScale = false;\r\n          break;\r\n        case 'bw2':\r\n          options.thMode = cv.ADAPTIVE_THRESH_GAUSSIAN_C;\r\n          options.thMeanCorrection = 15;\r\n          options.thBlockSize = 15;\r\n          break;\r\n        case 'bw3':\r\n          options.blur = true;\r\n          options.thMeanCorrection = 15;\r\n          break;\r\n      }\r\n\r\n      setTimeout(async () => {\r\n        if (options.grayScale) {\r\n          cv.cvtColor(dst, dst, cv.COLOR_RGBA2GRAY, 0);\r\n        }\r\n        if (options.blur) {\r\n          const ksize = new cv.Size(5, 5);\r\n          cv.GaussianBlur(dst, dst, ksize, 0, 0, cv.BORDER_DEFAULT);\r\n        }\r\n        if (options.th) {\r\n          if (options.grayScale) {\r\n            cv.adaptiveThreshold(dst, dst, options.thMax, options.thMode, cv.THRESH_BINARY, options.thBlockSize, options.thMeanCorrection);\r\n          } else {\r\n            dst.convertTo(dst, -1, 1, 60);\r\n            cv.threshold(dst, dst, 170, 255, cv.THRESH_BINARY);\r\n          }\r\n        }\r\n        if (!preview) {\r\n          cv.imshow(this.editedImage, dst);\r\n        }\r\n        await this.showPreview(dst);\r\n        this.processing.emit(false);\r\n        resolve();\r\n      }, 30);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * resize an image to fit constraints set in options.maxImageDimensions\r\n   */\r\n  private resize(image: HTMLCanvasElement): Promise<HTMLCanvasElement> {\r\n    return new Promise((resolve, reject) => {\r\n      this.processing.emit(true);\r\n      setTimeout(() => {\r\n        const src = cv.imread(image);\r\n        const currentDimensions = {\r\n          width: src.size().width,\r\n          height: src.size().height\r\n        };\r\n        const resizeDimensions = {\r\n          width: 0,\r\n          height: 0\r\n        };\r\n        if (currentDimensions.width > this.options.maxImageDimensions.width) {\r\n          resizeDimensions.width = this.options.maxImageDimensions.width;\r\n          resizeDimensions.height = this.options.maxImageDimensions.width / currentDimensions.width * currentDimensions.height;\r\n          if (resizeDimensions.height > this.options.maxImageDimensions.height) {\r\n            resizeDimensions.height = this.options.maxImageDimensions.height;\r\n            resizeDimensions.width = this.options.maxImageDimensions.height / currentDimensions.height * currentDimensions.width;\r\n          }\r\n          const dsize = new cv.Size(Math.floor(resizeDimensions.width), Math.floor(resizeDimensions.height));\r\n          cv.resize(src, src, dsize, 0, 0, cv.INTER_AREA);\r\n          const resizeResult = <HTMLCanvasElement> document.createElement('canvas');\r\n          cv.imshow(resizeResult, src);\r\n          src.delete();\r\n          this.processing.emit(false);\r\n          resolve(resizeResult);\r\n        } else {\r\n          this.processing.emit(false);\r\n          resolve(image);\r\n        }\r\n      }, 30);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * display a preview of the image on the preview canvas\r\n   */\r\n  private showPreview(image?: any) {\r\n    return new Promise((resolve, reject) => {\r\n      let src;\r\n      if (image) {\r\n        src = image;\r\n      } else {\r\n        src = cv.imread(this.editedImage);\r\n      }\r\n      const dst = new cv.Mat();\r\n      const dsize = new cv.Size(0, 0);\r\n      cv.resize(src, dst, dsize, this.imageResizeRatio, this.imageResizeRatio, cv.INTER_AREA);\r\n      cv.imshow(this.previewCanvas.nativeElement, dst);\r\n      src.delete();\r\n      dst.delete();\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  // *************** //\r\n  // Utility Methods //\r\n  // *************** //\r\n  /**\r\n   * set preview canvas dimensions according to the canvas element of the original image\r\n   */\r\n  private setPreviewPaneDimensions(img: HTMLCanvasElement) {\r\n    // set preview pane dimensions\r\n    this.previewDimensions = this.calculateDimensions(img.width, img.height);\r\n    this.previewCanvas.nativeElement.width = this.previewDimensions.width;\r\n    this.previewCanvas.nativeElement.height = this.previewDimensions.height;\r\n    this.imageResizeRatio = this.previewDimensions.width / img.width;\r\n    this.imageDivStyle = {\r\n      width: this.previewDimensions.width + this.options.cropToolDimensions.width + 'px',\r\n      height: this.previewDimensions.height + this.options.cropToolDimensions.height + 'px',\r\n      'margin-left': `calc((100% - ${this.previewDimensions.width + 10}px) / 2 + ${this.options.cropToolDimensions.width / 2}px)`,\r\n      'margin-right': `calc((100% - ${this.previewDimensions.width + 10}px) / 2 - ${this.options.cropToolDimensions.width / 2}px)`,\r\n    };\r\n    this.limitsService.setPaneDimensions({width: this.previewDimensions.width, height: this.previewDimensions.height});\r\n  }\r\n\r\n  /**\r\n   * calculate dimensions of the preview canvas\r\n   */\r\n  private calculateDimensions(width: number, height: number): { width: number; height: number; ratio: number} {\r\n    const ratio = width / height;\r\n\r\n    const maxWidth = this.screenDimensions.width > this.maxPreviewWidth ?\r\n      this.maxPreviewWidth : this.screenDimensions.width - 40;\r\n    const maxHeight = this.screenDimensions.height - 240;\r\n    const calculated = {\r\n      width: maxWidth,\r\n      height: Math.round(maxWidth / ratio),\r\n      ratio: ratio\r\n    };\r\n\r\n    if (calculated.height > maxHeight) {\r\n      calculated.height = maxHeight;\r\n      calculated.width = Math.round(maxHeight * ratio);\r\n    }\r\n    return calculated;\r\n  }\r\n\r\n  /**\r\n   * returns a point by it's roles\r\n   * @param roles - an array of roles by which the point will be fetched\r\n   */\r\n  private getPoint(roles: RolesArray) {\r\n    return this.points.find(point => {\r\n      return this.limitsService.compareArray(point.roles, roles);\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * a class for generating configuration objects for the editor\r\n */\r\nclass ImageEditorConfig implements DocScannerConfig {\r\n  /**\r\n   * max dimensions of oputput image. if set to zero\r\n   */\r\n  maxImageDimensions: ImageDimensions = {\r\n    width: 800,\r\n    height: 1200\r\n  };\r\n  /**\r\n   * background color of the main editor div\r\n   */\r\n  editorBackgroundColor = '#fefefe';\r\n  /**\r\n   * css properties for the main editor div\r\n   */\r\n  editorDimensions: { width: string; height: string; } = {\r\n    width: '100vw',\r\n    height: '100vh'\r\n  };\r\n  /**\r\n   * css that will be added to the main div of the editor component\r\n   */\r\n  extraCss: {[key: string]: string|number} = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0\r\n  };\r\n\r\n  /**\r\n   * material design theme color name\r\n   */\r\n  buttonThemeColor: 'primary'|'warn'|'accent' = 'accent';\r\n  /**\r\n   * icon for the button that completes the editing and emits the edited image\r\n   */\r\n  exportImageIcon = 'cloud_upload';\r\n  /**\r\n   * color of the crop tool\r\n   */\r\n  cropToolColor = '#3cabe2';\r\n  /**\r\n   * shape of the crop tool, can be either a rectangle or a circle\r\n   */\r\n  cropToolShape: PointShape = 'rect';\r\n  /**\r\n   * dimensions of the crop tool\r\n   */\r\n  cropToolDimensions: ImageDimensions = {\r\n    width: 10,\r\n    height: 10\r\n  };\r\n  /**\r\n   * aggregation of the properties regarding point attributes generated by the class constructor\r\n   */\r\n  pointOptions: PointOptions;\r\n  /**\r\n   * aggregation of the properties regarding the editor style generated by the class constructor\r\n   */\r\n  editorStyle?: {[key: string]: string|number};\r\n  /**\r\n   * crop tool outline width\r\n   */\r\n  cropToolLineWeight = 3;\r\n  /**\r\n   * maximum size of the preview pane\r\n   */\r\n  maxPreviewWidth = 800;\r\n\r\n  constructor(options: DocScannerConfig) {\r\n    if (options) {\r\n      Object.keys(options).forEach(key => {\r\n        this[key] = options[key];\r\n      });\r\n    }\r\n\r\n    this.editorStyle = {'background-color': this.editorBackgroundColor };\r\n    Object.assign(this.editorStyle, this.editorDimensions);\r\n    Object.assign(this.editorStyle, this.extraCss);\r\n\r\n    this.pointOptions = {\r\n      shape: this.cropToolShape,\r\n      color: this.cropToolColor,\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    Object.assign(this.pointOptions, this.cropToolDimensions);\r\n  }\r\n}\r\n\r\n","import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {NgxDraggablePointComponent} from './components/draggable-point/ngx-draggable-point.component';\r\nimport {NgxFilterMenuComponent} from './components/filter-menu/ngx-filter-menu.component';\r\nimport {NgxShapeOutlineComponent} from './components/shape-outline/ngx-shape-outline.component';\r\nimport {NgxDocScannerComponent} from './components/image-editor/ngx-doc-scanner.component';\r\nimport {LimitsService} from './services/limits.service';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {AngularDraggableModule} from 'angular2-draggable';\r\nimport {CommonModule} from '@angular/common';\r\nimport {OpenCVConfig} from './PublicModels';\r\nimport {NgxOpenCVModule} from 'ngx-opencv';\r\nimport {NgxOpenCVService, OpenCvConfigToken} from 'ngx-opencv';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgxDraggablePointComponent,\r\n    NgxFilterMenuComponent,\r\n    NgxShapeOutlineComponent,\r\n    NgxDocScannerComponent,\r\n  ],\r\n  imports: [\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatBottomSheetModule,\r\n    MatListModule,\r\n    AngularDraggableModule,\r\n    CommonModule,\r\n    NgxOpenCVModule,\r\n  ],\r\n  exports: [\r\n    FlexLayoutModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatBottomSheetModule,\r\n    MatListModule,\r\n    AngularDraggableModule,\r\n    NgxDocScannerComponent,\r\n  ],\r\n  entryComponents: [\r\n    NgxFilterMenuComponent,\r\n  ],\r\n  providers: [\r\n    NgxOpenCVService,\r\n    LimitsService,\r\n  ]\r\n})\r\nexport class NgxDocumentScannerModule {\r\n  static forRoot(config: OpenCVConfig): ModuleWithProviders<NgxDocumentScannerModule> {\r\n    return {\r\n      ngModule: NgxDocumentScannerModule,\r\n      providers: [\r\n        { provide: OpenCvConfigToken, useValue: config },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ngx-document-scanner\r\n */\r\n\r\nexport * from './lib/ngx-document-scanner.module';\r\nexport * from './lib/components/image-editor/ngx-doc-scanner.component';\r\nexport * from './lib/PublicModels';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {NgxDraggablePointComponent as ɵa} from './lib/components/draggable-point/ngx-draggable-point.component';\nexport {NgxFilterMenuComponent as ɵc} from './lib/components/filter-menu/ngx-filter-menu.component';\nexport {NgxShapeOutlineComponent as ɵd} from './lib/components/shape-outline/ngx-shape-outline.component';\nexport {LimitsService as ɵb} from './lib/services/limits.service';"]}